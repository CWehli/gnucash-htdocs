# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2006-01-23 21:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: www/donations.phtml:1
msgid "Donations"
msgstr ""

#: www/donations.phtml:11
msgid "Donating to the GnuCash Project"
msgstr ""

#: www/donations.phtml:13
msgid ""
"You can support the continued development of GnuCash, or simply show your "
"appreciation for what we've already done, by making a financial gift to the "
"GnuCash Project.  The GnuCash Project is an unincorporated entity, a loose "
"association of the authors and developers who are involved with maintaining, "
"extending and promoting the GnuCash software, documentation and website."
msgstr ""

#: www/donations.phtml:15
msgid ""
"Show your appreciation by donating to the GnuCash Project today! Currently, "
"we can only accept PayPal donations made through the "
msgstr ""

#: www/donations.phtml:17
msgid "SourceForge donation system"
msgstr ""

#: www/donations.phtml:18
msgid "If you wish to make a donation in another form, please contact the "
msgstr ""

#: www/donations.phtml:20
msgid ""
"mailing list.  Please note that the donation system is anonymous; The PayPal "
"registration info is not sent to us, and so we typically don't know who made "
"a donation, and thus can't mail out a thank-you note. Feel free to announce "
"your donation publicly on the mailing list, or in private.  We thank you "
"now, in advance. Registered SourceForge Users who are logged in when they "
"make a donation will see their names emblazoned in electrons on the "
msgstr ""

#: www/donations.phtml:24
msgid "GnuCash donation website"
msgstr ""

#: www/donations.phtml:24
msgid "Amounts are not shown."
msgstr ""

#: www/donations.phtml:27
msgid ""
"In the spirit of openness an public responsibility, we present a summary of "
"current finances below.  Announcements will be made when funds are "
"disbursed; we will keep this web page updated periodically."
msgstr ""

#: www/donations.phtml:33
msgid "Date"
msgstr ""

#: www/donations.phtml:34
msgid "Description"
msgstr ""

#: www/donations.phtml:35
msgid "Amount"
msgstr ""

#: www/donations.phtml:36 www/donations.phtml:46
msgid "Current Balance"
msgstr ""

#: www/donations.phtml:39 www/donations.phtml:45
msgid "22-June-2004"
msgstr ""

#: www/donations.phtml:40
msgid "Donations Received, March 2004 to 22 June 2004"
msgstr ""

#: www/index.phtml:2
msgid "Open Source Accounting Software"
msgstr ""

#: www/index.phtml:23
msgid "Welcome to GnuCash.org"
msgstr ""

#: www/index.phtml:25
msgid ""
"If you've been looking for a way to manage your personal or business "
"finances using Free Software, you've found it! Designed to be easy to use, "
"yet powerful and flexible, GnuCash allows you to track bank accounts, "
"stocks, income and expenses.  As quick and intuitive to use as a checkbook "
"register, it is based on professional accounting principles to ensure "
"balanced books and accurate reports.  GnuCash is backed by an active "
"development community and is blossoming into a full-fledged accounting "
"system. Developed under the GPL, you have no need to worry about "
"obsolescence: GnuCash will always be there for you. "
msgstr ""

#: www/index.phtml:27
msgid ""
"This web site is devoted to promoting the Gnucash.org software development  "
"project. We are committed to developing top-notch accounting and financial "
"tools for GNU/Linux and Unix users. This includes the development of "
"programming API's, libraries and components that can be used to create both "
"server and personal applications for home and business use. By focusing on "
"ease-of-use, modular design, architected interfaces and well-documented "
"code, we hope that GnuCash and its associated financial libraries become the "
"choice of a GNU generation of programmers and users."
msgstr ""

#: www/index.phtml:29
msgid ""
"Yes, GnuCash now runs on Mac OSX, as well as GNU/Linux, *BSD, and the "
"traditional Unixes: Solaris, AIX, and so on."
msgstr ""

#: www/index.phtml:32
msgid "News"
msgstr ""

#: www/bugs.phtml:1
msgid "GnuCash Bug Reports"
msgstr ""

#: www/bugs.phtml:8
msgid "GnuCash Bugs at GNOME Bugzilla"
msgstr ""

#: www/bugs.phtml:10
msgid ""
"The GnuCash bug reporting system is now hosted by GNOME bugzilla. This gives "
"the GnuCash project the ability to receive bug reports generated by Bug "
"Buddy as well as take advantage of the GNOME bug team in their overall "
"administration of GNOME bugs."
msgstr ""

#: www/bugs.phtml:13
msgid ""
"If you wish to use the GNOME bug system to report a GnuCash bug, please go to"
msgstr ""

#: www/bugs.phtml:22 www/bugs.phtml:32
msgid "Click here"
msgstr ""

#: www/bugs.phtml:23
msgid ""
" to see the list of bugs that have been reported but haven't yet been fixed."
msgstr ""

#: www/bugs.phtml:27
msgid ""
"(Yes, there are a lot of these. We need help from someone to weed out the "
"ones that can't be reproduced, that don't have enough info in them to do "
"anything with, and those that are duplicates of one another. You don't need "
"to be a programmer to help with the above tasks. Finally, we do need "
"programmers to help start fixing some of these. Please volunteer your time!)"
msgstr ""

#: www/bugs.phtml:35
msgid ""
"to see a complete list of all GnuCash bug reports (including old, fixed bugs)"
msgstr ""

#: www/architecture.phtml:1
msgid "Architecture"
msgstr ""

#: www/architecture.phtml:8
msgid "Architectural Overview"
msgstr ""

#: www/architecture.phtml:10
msgid ""
"GnuCash is written primarily in two languages: C and Scheme. The engine/"
"server is written in C primarily for speed, portability, stability and "
"historical reasons.  Various bits and peices that help glue together the "
"various components are written in Scheme. Scheme was choosen for its power, "
"expressiveness and ease of development. The user interface uses the GTK/"
"Gnome widget set, and  is designed primarily with the "
msgstr ""

#: www/architecture.phtml:16
msgid ""
"GnuCash aims to be modular, thereby allowing separate individuals to "
"maintain, develop and enhance certain modules without disturbing the overall "
"development.  (Never mind that modules help avoid spaghetti code and nasty, "
"ugly hacks). The interfaces between modules are documented, and, for the "
"most part, stable and unchanging."
msgstr ""

#: www/architecture.phtml:17
msgid "This block diagram shows major components."
msgstr ""

#: www/architecture.phtml:20
msgid "GnuCash currently consists of the following modules:"
msgstr ""

#: www/architecture.phtml:34
msgid "Engine"
msgstr ""

#: www/architecture.phtml:37
msgid ""
"The <dfn>Engine</dfn> (located under the <code>src/engine/</code> directory "
"in the GnuCash codebase) provides an interface for creating, manipulating, "
"and destroying six basic financial entities: Accounts, Transactions (which "
"record a sale/purchase on a given date), Splits (which record the balancing "
"components of a transaction: the amount, the account involved), Lots (which "
"identify that the physical item sold in one transaction is the same one that "
"was bought in another), Prices and Currencies/Commodities.  These six "
"entities provide the central data structures of the GnuCash financial data "
"model, <a href=\"/images/diagrams/structures.png\">as illustrated in this "
"diagram.</a> Additional structures are created by the business component."
msgstr ""

#: www/architecture.phtml:39
msgid ""
"The Engine code contains no GUI code whatsoever, and is essentially OS-"
"neutral. It is written entirely in C.  It was designed to be used in a stand-"
"alone server; however, it is not currently used as such."
msgstr ""

#: www/architecture.phtml:46
msgid "Query"
msgstr ""

#: www/architecture.phtml:49
msgid ""
"The <dfn>Query</dfn> module (also in <code>src/engine/</code>) provides a "
"generic mechanism for performing complex, structured queries on a collection "
"of objects.  For example, GnuCash uses queries to find transactions based on "
"a set of user-sepecified criteria, such as description, date posted, account "
"membership, etc. Simple queries can be combined using standard boolean "
"operators.  The query subsystem is a true generic object-query system, "
"independent of the financial structure in GnuCash, and is slowly being spun-"
"out as a stand-alone component at "
msgstr ""

#: www/architecture.phtml:50
msgid ""
"Note that Query works closely with the data storage backend, so that the "
"local collection of objects in the GnuCash engine acts as a 'cache' for a "
"possibly much larger set of data in the SQL backend.  The idea is to keep "
"GnuCash 'scalable': the runtime size can stay small, while still having high-"
"performance interactions, even when dealing with large, remote databases."
msgstr ""

#: www/architecture.phtml:57
msgid "Storage Backend"
msgstr ""

#: www/architecture.phtml:60
msgid ""
"The <dfn>Storage Backend</dfn> module (<code>src/backend/</code>) defines a "
"generic interface for storing GnuCash data (into files or databases) or for "
"communicating with a remote GnuCash storage server (by any server-defined "
"protocol). Currently implemented and supported are the XML file backend, "
"which stores GnuCash data in its native XML file format, and the Postgres "
"SQL backend, which supports multiple simultaneous users of GnuCash.  "
"Additionally, there are several experimental backends (currently broken/"
"unsupported): one for communicating with a GnuCash storage server via RPC, "
"and another that chats, via XML across HTTP, with a GnuCash server."
msgstr ""

#: www/architecture.phtml:67
msgid "Register"
msgstr ""

#: www/architecture.phtml:70
msgid ""
"The <dfn>Register</dfn> (<code>src/register/</code>) implements a ledger-"
"like GUI that allows the user to dynamically enter dates, prices, memos "
"descriptions, etc. in an intuitive fashion that should be obvious to anyone "
"who's used a checkbook register. The code is highly configurable, allowing "
"the ledger columns and rows to be laid out in any way, with no restrictions "
"on the function, type, and number of columns/rows. For example, one can "
"define a ledger with three date fields, one price field, and four memo "
"fields in a straightforward fashion. Cell handling objects support and "
"automatically validate date entry, memo entry (w/auto-completion), prices, "
"combo-boxes (pull-down menus), and multi-state check-boxes. Cells can be "
"marked read-write, or output-only. Cells can be assigned unique colors. The "
"currently active ledger row-block can be highlighted with a unique color."
msgstr ""

#: www/architecture.phtml:72
msgid ""
"The register code is completely independent of the engine code, knows "
"nothing about accounting or any of the other GnuCash subsystems. It can be "
"used in independent projects that have nothing to do with accounting."
msgstr ""

#: www/architecture.phtml:79
msgid "Reports &amp; Graphs"
msgstr ""

#: www/architecture.phtml:82
msgid ""
"The <dfn>Reports &amp; Graphs</dfn> module (<code>src/report/</code>) is a "
"scheme (guile) based system to create balance sheets, profit &amp; loss "
"statements, barcharts, piecharts, <i>etc.</i>  It uses the Query API to "
"fetch and format data, which is then converted into HTML and displayed with "
"the gtkhtml widget.  Graphs are implemented in Guppi,\n"
"(&lt;<code>http://www.gnome.org/guppi</code>&gt;) and are embedded (as live "
"graphs) directly in the HTML."
msgstr ""

#: www/architecture.phtml:90
msgid "Price Quotes"
msgstr ""

#: www/architecture.phtml:93
msgid ""
"The <dfn>Price Quotes</dfn> module (<code>src/quotes</code>) is a wrapper "
"around the Finance::Quote Perl module, used to fetch stock price data off "
"the Internet and insert it into the GnuCash Engine. The Finance::Quote "
"module is available at SourceForge (or \n"
"through CPAN). This module can fetch price quotes from many different "
"sources including Yahoo, Yahoo Europe, and some international exchanges. "
"Before a new data source can be added to GnuCash, it must be added to "
"Finance::Quote first."
msgstr ""

#: www/architecture.phtml:95
msgid ""
"The Finance::Quote module also supports fetching currency exchange rates. "
"GnuCash will be extended to allow the fetching and use of currency exchange "
"rates."
msgstr ""

#: www/architecture.phtml:102
msgid "User Preferences"
msgstr ""

#: www/architecture.phtml:105
msgid ""
"The <dfn>User Preferences</dfn> module (<code>src/app-utils/</code>) "
"provides an infrastructure for defining both user-configurable and internal "
"preferences. Preferences are defined in scheme using several predefined "
"preference types such as boolean, string, date, etc. Preferences are "
"'implemented' by providing a GUI which allows the user to see and change "
"preference values. An API is provided to query preference values and to "
"register callbacks which will be invoked when preferences change."
msgstr ""

#: www/architecture.phtml:106
msgid ""
"Preference values which are different from the default values are stored as "
"scheme forms in a user-specific preferences file (<code>~/.gnucash/config."
"auto</code>). This file is automatically loaded upon startup."
msgstr ""

#: www/architecture.phtml:113
msgid "Data Import &amp; Export"
msgstr ""

#: www/architecture.phtml:116
msgid ""
"The <dfn>Import</dfn> module (<code>src/import-export/</code>) provides "
"functionality for importing QIF (Quicken Interchange Format) data files and "
"OFX (Open Financial Exchange) files into GnuCash.  One of the difficult  "
"aspects of importing data from a file is what to do if the file contains "
"some data that has already been entered into GnuCash.  This can happen when "
"the imported file is a bank statement obtained periodically from a website: "
"each time it is fetched, it might contain transactions that were previously "
"reported.  Thus, to perform file import correctly, one must have a fairly "
"sophisticated transaction matcher that can detect and properly handle "
"(ignore) duplicate transactions. This pattern matching is generically "
"useful, and is used by the HCBI subsystem.  (HCBI is an online banking "
"system available to residents of Germany)."
msgstr ""

#: www/architecture.phtml:123
msgid "Small Business Features"
msgstr ""

#: www/architecture.phtml:126
msgid ""
"GnuCash provides support for a number of small business features, including "
"a business-oriented ledger (which shows additional info that the regular, "
"'check-book style' ledger does not), Invoicing, Jobs &amp; Order Entry, Tax "
"Tables, and lists of Vendors, Employees and Customers.  The structural "
"organization of this code is similar to that of core GnuCash: there is a set "
"of C objects (<code>src/business/business-core)</code>) that are saved/"
"restored in the backend. The objects themsleves are manipulated by various "
"GUI dialog elements (<code>src/business/gnome)</code>)."
msgstr ""

#: www/architecture.phtml:133
msgid "Recurring Transactions"
msgstr ""

#: www/architecture.phtml:136
msgid ""
"Scheduled transactions provide a mechanism for describing a set of regularly "
"recurring financial transactions so that the GnuCash dataset can be "
"automatically updated as time passes.  The core object is the &quot;"
"Frequency Specification&quot;, which identifies a periodicity (daily, "
"weekly, monthly, etc.).  It is manipulated by a GUI widget.  The FreqSpec is "
"used with special &quot;Template Transactions&quot; that record info about "
"how future transactions should be made out, and are manipulated by a "
"corresponding GUI."
msgstr ""

#: www/architecture.phtml:143
msgid "GnuCash"
msgstr ""

#: www/architecture.phtml:146
msgid ""
"The GnuCash module (<code>src/gnome</code> and other directories) is the "
"main GUI application. It consists of a collection of miscellaneous GUI code "
"to glue together all of the pieces above into a coherent, point-and-click "
"whole. It is meant to be easy to use and intuitive to the novice user "
"without sacrificing the power and flexibility that a professional might "
"expect. When people say that GnuCash is trying to be a &quot;Quicken or MS "
"Money look/work/act-alike&quot;, this is the piece that they are referring "
"to. It really is meant to be a personal-finance manager with enough power "
"for the power user and the ease of use for the beginner."
msgstr ""

#: www/architecture.phtml:147
msgid ""
"Currently, the Gnome interface is the only operational interface. An "
"obsolete Motif interface can be fished out of historical CVS; but this "
"interface has been deleted in the current CVS."
msgstr ""

#: news/en/040420-gtt.txt:4
msgid ""
"The Gnome Time Tracker is a to-do list/diary/journal tool that can track\n"
"the amount of time spent on projects, and, among other things, generate\n"
"reports and invoices based on that time. I've used it to keep shopping\n"
"lists, organize ideas, track bug reports, keep a diary of activities,\n"
"provide weekly status reports to management, and even as a consultant\n"
"billing system."
msgstr ""
